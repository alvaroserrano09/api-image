openapi: 3.0.0
info:
  title: "API"
  version: 1.0.0
tags:
  - name: "tasks"
    description: "Tasks information"
paths:
  /v1/tasks/{taskId}:
    get:
      description: "Get task status, price, and images"
      summary: "Get status, price, and images"
      tags:
        - "tasks"
      parameters:
        - in: "path"
          name: "taskId"
          required: true
          schema:
            $ref: "#/components/schemas/UniversallyUniqueIdentifier"
      responses:
        '200':
          description: "OK"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  taskId:
                    type: "string"
                    example: "65d4a54b89c5e342b2c2c5f6"
                  status:
                    $ref: "#/components/schemas/status"
                    example: "completed"
                  price:
                    type: "number"
                    example: 25.5
                  images:
                    type: "array"
                    items:
                      type: "object"
                      properties:
                        resolution:
                          type: "string"
                          example: "1024"
                        path:
                          type: "string"
                          example: "/output/image1/1024/f322b730b287da77e1c519c7ffef4fc2.jpg"
        '404':
          description: "Not Found"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "Task not found"
  /v1/tasks:
    post:
      description: "Create a new task"
      summary: "Create a new task with status, price, and images"
      tags:
        - "tasks"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                      path:
                        type: "string"
                        example: "/output/image1/1024/f322b730b287da77e1c519c7ffef4fc2.jpg"
      responses:
        '201':
          description: "Created"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  taskId:
                    type: "string"
                    example: "65d4a54b89c5e342b2c2c5f6"
                  status:
                    $ref: "#/components/schemas/status"
                    example: "pending"
                  price:
                    type: "number"
                    example: 25.5
components:
  schemas:
    UniversallyUniqueIdentifier:
      type: "string"
      pattern: "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
    
    status:
      type: "string"
      enum:
        - "pending"
        - "completed"
        - "failed"
                 
name: api-image-ci

services:
  api-image:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    depends_on:
      mongodb:
        condition: service_started
    environment:
      - PORT=3001
      - MONGO_URI=mongodb://admin:admin@mongodb:27017/api-image?authSource=admin
    volumes:
      - .:/workspace:cached
    networks:
      - network-api-image
    command: [ 'tail', '-f', '/dev/null' ]

  newman:
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile.dev
    working_dir: /workspace
    depends_on:
      api-image:
        condition: service_started
    networks:
      - network-api-image
    command: "newman run api/postman/collection/api-image.postman_collection.json -e api/postman/environment/api-image.enviroment.postman_environment.json --reporters htmlextra,cli,junit --reporter-htmlextra-export newman/report.html --reporter-junit-export newman/report.xml"
    volumes:
      - .:/workspace:cached

  mongodb:
    image: mongo:latest
    ports:
      - ${MONGO_api_image_PORT:-27017}:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
      - MONGO_INITDB_DATABASE=api-image
    networks:
      - network-api-image
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongodb:27017/test --quiet
      interval: 2s
      timeout: 2s
      retries: 10
      start_period: 2s

networks:
  network-api-image:
